@{
    Layout = "Auth/_LayoutAuth";
}
@model RegisterViewModel
<div class="container">

    <section class="section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center">

                    <div class="d-flex justify-content-center py-4">
                        <a href="index.html" class="logo d-flex align-items-center w-auto">
                            <img src="assets/img/logo.png" alt="">
                            <span class="d-none d-lg-block">Troll Market</span>
                        </a>
                    </div><!-- End Logo -->

                    <div class="card mb-3">

                        <div class="card-body">

                            <div class="pt-4 pb-2">
                                <h5 class="card-title text-center pb-0 fs-4">Create an Account</h5>
                                <p class="text-center small">Enter your personal details to create account</p>
                            </div>
                            <form id="formInsert" class="row g-3 needs-validation">
                                <div class="col-12">
                                    <label for="username" class="form-label">Username</label>
                                    <div class="input-group has-validation">
                                        <span class="input-group-text" id="inputGroupPrepend"></span>
                                        <input type="text"  class="form-control" id="username" required>
                                        <div class="invalid-feedback username"></div>
                                    </div>
                                </div>

                                <div class="col-12">
                                    <label for="password" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="password" required>
                                    <div class="invalid-feedback password"></div>
                                </div>
                                <div class="col-12">
                                    <label for="retypePassword" class="form-label">Confirm Password</label>
                                    <input type="password" class="form-control" id="retypePassword" required>
                                    <div class="invalid-feedback retypePassword"></div>
                                </div>
                                <div class="col-12">
                                    <label for="name" class="form-label">Your Name</label>
                                    <input type="text" class="form-control" id="name" required>
                                    <div class="invalid-feedback name"></div>
                                </div>

                                <div class="col-12">
                                    <label for="address" class="form-label">Your Address</label>
                                    <textarea class="form-control" id="address" required></textarea>
                                    <div class="invalid-feedback address"></div>
                                </div>
                                <div style="display:none" class="col-12">
                                    <input type="text" asp-for="Role" class="form-control" id="role" required>
                                </div>
                                <div class="col-12">
                                    <button class="btn btn-primary w-100" id="btnInsert" type="submit">Create Account</button>
                                </div>
                                <div class="col-12">
                                    <p class="small mb-0">Already have an account? <a asp-action="Login">Log in</a></p>
                                </div>
                            </form>

                        </div>
                    </div>

                    <div class="credits">
                        © 2023 Troll Market by Aldy Nifratama.
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<script>
    (function(){
        register();
        validatePassword();
        matchPassword();
    }())
    function validatePassword() {
        let passwordInput = document.querySelector('#password');
        let passwordError = document.querySelector('.password');
        let submitButton = document.querySelector('#btnInsert');
        passwordInput.addEventListener('input', function () {
            let password = passwordInput.value;
            let uppercaseRegex = /[A-Z]/;
            let digitRegex = /[0-9]/;
            let uniqueCharRegex = /[^A-Za-z0-9]/;
            let minLength = 8;
            let hasUppercase = uppercaseRegex.test(password);
            let hasDigit = digitRegex.test(password);
            let hasUniqueChar = uniqueCharRegex.test(password);
            let isLengthValid = password.length >= minLength;
            passwordInput.classList.remove("is-invalid");
            passwordError.textContent = "";
            submitButton.removeAttribute('disabled');
            if (!isLengthValid) {
                passwordInput.classList.add("is-invalid");
                passwordError.textContent = "Password must be at least 8 characters long.";
                submitButton.setAttribute('disabled', 'disabled');
            } else if (!hasUppercase) {
                passwordInput.classList.add("is-invalid");
                passwordError.textContent = "Password must contain at least one uppercase letter.";
                submitButton.setAttribute('disabled', 'disabled');
            } else if (!hasDigit) {
                passwordInput.classList.add("is-invalid");
                passwordError.textContent = "Password must contain at least one digit.";
                submitButton.setAttribute('disabled', 'disabled');
            } else if (!hasUniqueChar) {
                passwordInput.classList.add("is-invalid");
                passwordError.textContent = "Password must contain at least one unique character.";
                submitButton.setAttribute('disabled', 'disabled');
            }
            
        });
    }
    function matchPassword(){
        let password = document.querySelector("#password");
        let retypePassword = document.querySelector("#retypePassword");
        let errorretypePassword = document.querySelector(".retypePassword");
        let submitButton = document.querySelector('#btnInsert');
        retypePassword.addEventListener('input',function(){
            retypePassword.classList.remove("is-invalid");
            errorretypePassword.textContent = "";
            submitButton.removeAttribute('disabled');
            if(password.value !== retypePassword.value){
                retypePassword.classList.add("is-invalid");
                errorretypePassword.textContent = "Retype Password does not match";
                submitButton.setAttribute('disabled', 'disabled');
            }
        });
    }
    function register() {
        let form = document.querySelector("#formInsert");
        form.addEventListener('submit', function (e) {
            e.preventDefault();
            //DOM untuk mengambil value dari inputan
            let username = document.querySelector("#username");
            let password = document.querySelector("#password");
            let retypePassword = document.querySelector("#retypePassword");
            let name = document.querySelector("#name");
            let address = document.querySelector("#address");
            let role = document.querySelector("#role");
            //DOM untuk hendle Response error
            let errorusername = document.querySelector(".username");
            let errorpassword = document.querySelector(".password");
            let errorretypePassword = document.querySelector(".retypePassword");
            let errorname = document.querySelector(".name");
            let erroraddress = document.querySelector(".address");

            //button
            let button = document.querySelector("#btnInsert");
            data = {
                "UserName": username.value.trim() !== '' ? username.value : null,
                "Password": password.value.trim() !== '' ? password.value : null,
                "RetypePassword": retypePassword.value.trim() !== '' ? retypePassword.value : null,
                "Name": name.value.trim() !== '' ? name.value : null,
                "Address": address.value.trim() !== '' ? address.value : null,
                "Role": role.value.trim() !== '' ? role.value : null,
            }
            
            let url = `http://localhost:5201/Api/v1/Auth`;
            let request = new XMLHttpRequest();
            request.open('POST', url);
            request.setRequestHeader("Content-Type", "application/json");
            button.setAttribute('disable', 'disabled');
            button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...';
            request.send(JSON.stringify(data));
            request.onload = () => {
                button.removeAttribute('disable');
                button.innerHTML = 'Create Account';

                let result = JSON.parse(request.response);
                console.log(result);
                if (result.errors) {
                    if (result.errors.UserName) {
                        username.classList.add("is-invalid");
                        errorusername.textContent = result.errors.UserName;
                    } else {
                        username.classList.remove("is-invalid");
                        errorusername.textContent = "";
                    }
                    if (result.errors.Password) {
                        password.classList.add("is-invalid");
                        errorpassword.textContent = result.errors.Password;
                    } else {
                        password.classList.remove("is-invalid");
                        errorpassword.textContent = "";
                    }
                    if (result.errors.RetypePassword) {
                        retypePassword.classList.add("is-invalid");
                        errorretypePassword.textContent = result.errors.RetypePassword;
                    } else {
                        retypePassword.classList.remove("is-invalid");
                        errorretypePassword.textContent = "";
                    }
                    if (result.errors.Address) {
                        address.classList.add("is-invalid");
                        erroraddress.textContent = result.errors.Address;
                    } else {
                        address.classList.remove("is-invalid");
                        erroraddress.textContent = "";
                    }
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'Succes',
                        text: result.message

                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = 'http://localhost:5115/Auth/Login';
                        }
                    });
                }
            }

        });
    }
</script>